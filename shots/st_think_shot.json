[
    {
        "agent_task": "The robot task is to put a fruit tray containing apple into the refrigerator. The behavioral logic of robot should be as follows. The fruit tray is on the countertop in the kitchen, with an apple inside. There is a refrigerator in the kitchen. The robot needs to put the fruit tray into the refrigerator and turn off the refrigerator.",
        "action": {
            "action_class": "Pick_up_Fruit_Tray",
            "precondition": "None",
            "description": "The robot uses its one gripper to pick up the fruit tray.",
            "action_instance": "Pick_up_Fruit_Tray"
        },
        "output": {
            "thought": "This action will change the gripper_content of robot. And this action will directly change the fruit_tray's position. And due to the 'content' state of the fruit tray is [['apple']], which refers that fruit_tray has apple inside. Moreover, the state 'fruit_tray_on_countertop' will change since the fruit tray is pickced up and is not on the countertop any more. So when picking up the fruit_tray, the apple will also move along with it. The position of the apple will also be changed. The relationship between the fruit_tray and the countertop will change.",
            "states_transferred": [
                "agents-home_robot-gripper_content",
                "objects-fruit_tray-position",
                "objects-apple-position",
                "relationship-fruit_tray_on_countertop"
            ]
        },
        "states": {
            "agents": {
                "home_robot": {
                    "type": "home_robot",
                    "position": [
                        1.0,
                        1.0,
                        0.7
                    ],
                    "setting": "Robot can only touch objects within the range of gripper contact. The robot has two grippers and thus the robot can hold two objects at most simultaneously.",
                    "gripper_contact_range": 1.0,
                    "gripper_content": []
                }
            },
            "objects": {
                "fruit_tray": {
                    "type": "fruit_tray",
                    "position": [
                        1.1,
                        1.1,
                        0.6
                    ],
                    "size": 0.2,
                    "content": [
                        [
                            "apple"
                        ]
                    ]
                },
                "apple": {
                    "type": "apple",
                    "position": [
                        1.1,
                        1.1,
                        0.7
                    ],
                    "size": 0.1
                },
                "refrigerator": {
                    "type": "refrigerator",
                    "position": [
                        5.0,
                        5.0,
                        1.0
                    ],
                    "size": 1.8,
                    "door_status": "Closed",
                    "content": []
                },
                "countertop": {
                    "type": "countertop",
                    "position": [
                        1.1,
                        1.1,
                        0.5
                    ],
                    "size": 0.5
                }
            },
            "relationship": {
                "fruit_tray_on_countertop": true
            },
            "environment": {
                "type": "kitchen"
            }
        },
        "state_description": {
            "type": "the type of the robot or object, e.g., robot, cube, table, etc.",
            "position": "the 3d position of the robot or object, e.g., [4.0, 6.0, -2.0]",
            "size": "the size of the robot or object, e.g., size of an apple is 0.1",
            "gripper_content": "the content in the gripper of the robot. It is a nested list that represent the affliation relationship of objects. e.g., [], [['bowl']], [['fruit_tray',['apple']]]",
            "setting": "the role setting of the robot or object, e.g., 'Robot can only touch objects within the range of gripper contact.'",
            "gripper_contact_range": "the range of robot gripper contact, e.g., 0.6",
            "content": "the content in the corresponding object. It is a nested list that represent the affliation relationship of objects. e.g., [], [['bowl']], [['fruit_tray',['apple']]]",
            "door_status": "the status of the refrigerator, e.g., 'Open' or 'Closed'",
            "fruit_tray_on_countertop": "whether the fruit tray is on the countertop or not, e.g., True or False"
        }
    },
    {
        "agent_task": "The robot task is to put a fruit tray containing apple into the refrigerator. The behavioral logic of robot should be as follows. The fruit tray is on the countertop in the kitchen, with an apple inside. There is a refrigerator in the kitchen. The robot needs to put the fruit tray into the refrigerator and turn off the refrigerator.",
        "action": {
            "action_class": "Move_To_Refrigerator",
            "description": "Robot moves to the location of the refrigerator.",
            "action_instance": "Move_To_Refrigerator"
        },
        "output": {
            "thought": "This action will directly change the robot's position. And due to the 'gripper_content' state of the robot is [['fruit_tray', ['apple']]], which refers that chef_robot hold the 'fruit_tray' and an apple. So when chef_robot moves, the fruit_tray and apple will also move along with the robot. The fruit_tray's the apple's position will be changed.",
            "states_transferred": [
                "agents-home_robot-position",
                "objects-fruit_tray-position",
                "objects-apple-position"
            ]
        },
        "states": {
            "agents": {
                "home_robot": {
                    "type": "home_robot",
                    "position": [
                        1.0,
                        1.0,
                        0.7
                    ],
                    "gripper_content": [
                        [
                            "fruit_tray",
                            [
                                "apple"
                            ]
                        ]
                    ],
                    "setting":"Robot can only touch objects within the range of gripper contact. The robot has two grippers and thus the robot can hold two objects at most simultaneously."
                }
            },
            "objects": {
                "fruit_tray": {
                    "type": "fruit_tray",
                    "position": [
                        1.0,
                        1.0,
                        1.0
                    ],
                    "size": 0.2,
                    "content": [
                        [
                            "apple"
                        ]
                    ]
                },
                "apple": {
                    "type": "apple",
                    "position": [
                        1.0,
                        1.0,
                        1.1
                    ],
                    "size": 0.1
                },
                "refrigerator": {
                    "type": "refrigerator",
                    "position": [
                        5.0,
                        5.0,
                        1.0
                    ],
                    "size": 1.8,
                    "door_status": "Closed",
                    "content": []
                }
            },
            "relationship": {},
            "environment": {
                "type": "kitchen"
            }
        },
        "state_description": {
            "type": "the type of the robot or object, e.g., robot, cube, table, etc.",
            "position": "the 3d position of the robot or object, e.g., [4.0, 6.0, -2.0]",
            "size": "the size of the robot or object, e.g., size of an apple is 0.1",
            "gripper_content": "the content in the gripper of the robot. It is a nested list that represent the affliation relationship of objects. e.g., [], [['bowl']], [['fruit_tray',['apple']]]",
            "setting": "the role setting of the robot or object, e.g., 'Robot can only touch objects within the range of gripper contact.'",
            "door_status": "the status of the refrigerator, e.g., 'Open' or 'Closed'",
            "content": "the content in the corresponding object. It is a nested list that represent the affliation relationship of objects. e.g., [], [['bowl']], [['fruit_tray',['apple']]]"
        }
    },
    {
        "agent_task": "The robot task is to pour out the remaining coffee in the coffee cup and clean it with water.",
        "action": {
            "action_class": "Pour_remained_coffee_in_Kitchen_sink",
            "description": "Robot extends the gripper that holds the coffee cup, dumps the cup and empties the coffee inside the coffee cup into the kitchen sink.",
            "action_instance": "Pour_remained_coffee_in_Kitchen_sink"
        },
        "output": {
            "thought": "This action will directly change the coffee_cup's content. And due to the 'gripper_content' state of the robot is [['coffee_cup', ['coffee']]], which refers that chef_robot holds the coffee_cup. So if robot pours the remained coffee which is inside the coffee_cup, the gripper_content of robot will also change. And due to robot pours coffee into the kitchen sink, the content of kitchen sink will also change.",
            "states_transferred": [
                "agents-home_robot-gripper_content",
                "objects-coffee_cup-content",
                "objects-kitchen_sink-content"
            ]
        },
        "states": {
            "agents": {
                "home_robot": {
                    "type": "home_robot",
                    "position": [
                        1.0,
                        1.0,
                        0.7
                    ],
                    "size": 1.0,
                    "gripper_content": [
                        [
                            "coffee_cup",
                            [
                                "coffee"
                            ]
                        ]
                    ],
                    "setting":"Robot can only touch objects within the range of gripper contact. The robot has two grippers and thus the robot can hold two objects at most simultaneously."
                }
            },
            "objects": {
                "coffee_cup": {
                    "type": "coffee_cup",
                    "position": [
                        1.0,
                        1.0,
                        0.6
                    ],
                    "size": 0.1,
                    "content":[["coffee"]]
                },
                "coffee":{
                    "type": "coffee",
                    "position": [
                        1.0,
                        1.0,
                        0.6
                    ]
                },
                "kitchen_sink": {
                    "type": "kitchen_sink",
                    "position": [
                        1.1,
                        1.1,
                        0.5
                    ],
                    "size": 0.6,
                    "content":[]
                }
            },
            "relationship": {},
            "environment": {
                "type": "kitchen"
            }
        },
        "state_description": {
            "type": "the type of the robot or object, e.g., robot, cube, table, etc.",
            "position": "the 3d position of the robot or object, e.g., [4.0, 6.0, -2.0]",
            "size": "the size of the robot or object, e.g., size of an apple is 0.1",
            "gripper_content": "the content in the gripper of the robot. It is a nested list that represent the affliation relationship of objects. e.g., [], [['bowl']], [['fruit_tray',['apple']]]",
            "setting": "the role setting of the robot or object, e.g., 'Robot can only touch objects within the range of gripper contact.'",
            "content": "the content in the corresponding object. It is a nested list that represent the affliation relationship of objects. e.g., [], [['bowl']], [['fruit_tray',['apple']]]"
        }
    }
]