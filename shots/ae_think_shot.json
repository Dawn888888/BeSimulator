[
    {
        "agent_task": "The robot task is to put a fruit tray containing apple into the refrigerator. The behavioral logic of robot should be as follows. The fruit tray is on the countertop in the kitchen, with an apple inside. There is a refrigerator in the kitchen. The robot needs to put the fruit tray into the refrigerator and turn off the refrigerator.",
        "action": {
            "action_class": "Pick_up_Fruit_Tray",
            "precondition": "None",
            "description": "The robot grasps and lifts the fruit_tray with it one gripper.",
            "action_instance": "Pick_up_Fruit_Tray"
        },
        "output": {
            "thought": "The successful execution of this action 'Pick_up_Fruit_Tray' is only when 'can_robot_touch_fruit_tray?=true' and 'whether_robot_has_free_gripper?=true', which means the robot has free grippers to grisp the fruit_tray. The condition 'can_robot_touch_fruit_tray' needs to check whether the robot is already in a position where 'fruit_tray' can be touched by the robot's gripper without the need for positional movement. So, the state 'position' and 'gripper_contact_range' of 'home_robot' in 'agents', the state 'position' of 'fruit_tray' in 'objects' should be checked. The condition 'whether_robot_has_free_gripper' needs to check whether the robot has free grippers to pick up other objects. And this requires checking the state of the robot gripper and the setting of the robot itself. So, the state 'gripper_content' and 'setting' of 'home_robot' should be checked.",
            "corestates": {
                "can_robot_touch_fruit_tray?": [
                    "agents-home_robot-position",
                    "objects-fruit_tray-position",
                    "agents-home_robot-gripper_contact_range"
                ],
                "whether_robot_has_free_gripper?": [
                    "agents-home_robot-setting",
                    "agents-home_robot-gripper_content"
                ]
            },
            "corestates_successtag": {
                "can_robot_touch_fruit_tray?": true,
                "whether_robot_has_free_gripper?": true
            }
        },
        "states": {
            "agents": {
                "home_robot": {
                    "type": "home_robot",
                    "position": [
                        1.0,
                        1.0,
                        0.7
                    ],
                    "setting": "Robot can only touch objects within the range of gripper contact. The robot has two grippers and thus the robot can hold two objects at most simultaneously.",
                    "gripper_contact_range": 1.0,
                    "size": 1.2,
                    "gripper_content": [
                        [
                            "knife"
                        ]
                    ]
                }
            },
            "objects": {
                "fruit_tray": {
                    "type": "fruit_tray",
                    "position": [
                        1.1,
                        1.1,
                        0.6
                    ],
                    "size": 0.2,
                    "content": [
                        [
                            "apple"
                        ]
                    ]
                },
                "apple": {
                    "type": "apple",
                    "position": [
                        1.1,
                        1.1,
                        0.7
                    ],
                    "size": 0.1
                },
                "knife": {
                    "type": "knife",
                    "position": [
                        1.0,
                        1.0,
                        0.7
                    ],
                    "size": 0.1
                },
                "refrigerator": {
                    "type": "refrigerator",
                    "position": [
                        5.0,
                        5.0,
                        1.0
                    ],
                    "size": 1.8,
                    "door_status": "Closed",
                    "content": []
                },
                "countertop": {
                    "type": "countertop",
                    "position": [
                        1.1,
                        1.1,
                        0.5
                    ],
                    "size": 0.5
                }
            },
            "relationship": {
                "fruit_tray_on_countertop": true
            },
            "environment": {
                "type": "kitchen"
            }
        },
        "state_description": {
            "type": "the type of the robot or object, e.g., robot, cube, table, etc.",
            "position": "the 3d position of the robot or object, e.g., [4.0, 6.0, -2.0]",
            "size": "the size of the robot or object, e.g., size of an apple is 0.1",
            "gripper_content": "the content in the gripper of the robot. It is a nested list that represent the affliation relationship of objects. e.g., [], [['bowl']], [['fruit_tray',['apple']]]",
            "setting": "the role setting of the robot or object, e.g., 'Robot can only touch objects within the range of gripper contact.'",
            "gripper_contact_range": "the range of robot gripper contact, e.g., 0.6",
            "content": "the content in the corresponding object. It is a nested list that represent the affliation relationship of objects. e.g., [], [['bowl']], [['fruit_tray',['apple']]]",
            "door_status": "the status of the refrigerator, e.g., 'Open' or 'Closed'",
            "fruit_tray_on_countertop": "whether the fruit tray is on the countertop or not, e.g., True or False"
        }
    },
    {
        "agent_task": "The robot task is to open the plastic bottle and drink water.",
        "action": {
            "action_class": "drink_water",
            "description": "The robot tilts the opened plastic bottle which is in robot's gripper, and drinks water.",
            "action_instance": "drink_water"
        },
        "output": {
            "thought": "The successful execution of this action 'drink_water' is only when 'whether_robot_hold_plastic_bottle?=true' and 'plastic_bottle_has_water?=true' and 'plastic_bottle_state_is_open?=true', which means the robot could drink water from the opened plastic bottle which is in robot's gripper. The condition 'whether_robot_hold_plastic_bottle' needs to check whether the robot hold the plastic bottle. So, the state 'gripper_content' of 'home_robot' in 'agents' should be checked. The condition 'plastic_bottle_has_water' needs to check whether the plastic bottle has water. So, the state 'content' of 'plastic_bottle' in 'objects' should be checked. The condition 'plastic_bottle_state_is_open' needs to check whether the plastic bottle is open. So, the state 'bottle_state' of 'plastic_bottle' in 'objects' should be checked.",
            "corestates": {
                "whether_robot_hold_plastic_bottle?": [
                    "agents-home_robot-gripper_content"
                ],
                "plastic_bottle_has_water?": [
                    "objects-plastic_bottle-content"
                ],
                "plastic_bottle_state_is_open?":[
                    "objects-plastic_bottle-bottle_state"
                ]
            },
            "corestates_successtag": {
                "whether_robot_hold_plastic_bottle?": true,
                "plastic_bottle_has_water?": true,
                "plastic_bottle_state_is_open?": true
            }
        },
        "states": {
            "agents": {
                "robot": {
                    "type": "home_robot",
                    "position": [
                        3.0,
                        1.0,
                        1.0
                    ],
                    "gripper_content": [["plastic_bottle",["water"]]],
                    "setting": "Robot can only touch objects within the range of gripper contact. The robot has two grippers and thus the robot can hold two objects at most simultaneously.",
                    "gripper_contact_range": 1.0,
                    "size": 1.2
                }
            },
            "objects": {
                "plastic_bottle": {
                    "type": "plastic_bottle",
                    "position": [
                        3.0,
                        1.0,
                        0.9
                    ],
                    "content":["water"],
                    "bottle_state": "Open",
                    "size": 0.2
                }
            },
            "relationship": {},
            "environment": {}
        },
        "state_description": {
            "type": "the type of the robot or object, e.g., robot, cube, table, etc.",
            "position": "the 3d position of the robot or object, e.g., [4.0, 6.0, -2.0]",
            "gripper_content": "the content in the gripper of the robot. It is a nested list that represent the affliation relationship of objects. e.g., [], [['bowl']], [['fruit_tray',['apple']]]",
            "setting": "the role setting of the robot or object, e.g., 'Robot can only touch objects within the range of gripper contact.'",
            "gripper_contact_range": "the range of robot gripper contact, e.g., 0.5",
            "size": "the size of the robot or object, e.g., size of an apple is 0.1",
            "content": "the content in the corresponding object. It is a nested list that represents the affiliation relationship of objects. e.g., [], [['bowl']], [['fruit_tray',['apple']]]",
            "bottle_state": "the state of the bottle lid, e.g., 'Open' or 'Closed'"
        }
    },
    {
        "agent_task": "The robot task is to put a fruit tray containing apple into the refrigerator. The behavioral logic of robot should be as follows. The fruit tray is on the countertop in the kitchen, with an apple inside. There is a refrigerator in the kitchen. The robot needs to put the fruit tray into the refrigerator and turn off the refrigerator.",
        "action": {
            "action_class": "Move_To_Refrigerator",
            "precondition": "None",
            "description": "The robot moves to the location of the refrigerator.",
            "action_instance": "Move_To_Refrigerator"
        },
        "output": {
            "thought": "The successful execution of this action 'Move_To_Refrigerator' is only when 'is_refrigerator_inside_robot_gripper_contact?=false', which means the refrigerator is not inside the robot gripper contact range and robot needs to move to the refrigerator. The condition needs to check whether the the position of 'refrigerator' is inside the reach of the robot's gripper contact range. So, the state 'position' and 'gripper_contact_range' of 'home_robot' in 'agents', the state 'position' of 'refrigerator' in 'objects' should be checked.",
            "corestates": {
                "is_refrigerator_inside_robot_gripper_contact?": [
                    "agents-home_robot-position",
                    "objects-refrigerator-position",
                    "agents-home_robot-gripper_contact_range"
                ]
            },
            "corestates_successtag": {
                "is_refrigerator_inside_robot_gripper_contact?": false
            }
        },
        "states": {
            "agents": {
                "home_robot": {
                    "type": "home_robot",
                    "position": [
                        1.0,
                        1.0,
                        0.7
                    ],
                    "gripper_content": [
                        [
                            "fruit_tray",
                            [
                                "apple"
                            ]
                        ]
                    ],
                    "size": 1.2,
                    "gripper_contact_range": 1.0,
                    "setting": "Robot can only touch objects within the range of gripper contact. The robot has two grippers and thus the robot can hold two objects at most simultaneously."
                }
            },
            "objects": {
                "fruit_tray": {
                    "type": "fruit_tray",
                    "position": [
                        1.0,
                        1.0,
                        1.0
                    ],
                    "size": 0.2,
                    "content": [
                        [
                            "apple"
                        ]
                    ]
                },
                "apple": {
                    "type": "apple",
                    "position": [
                        1.0,
                        1.0,
                        1.1
                    ],
                    "size": 0.1
                },
                "refrigerator": {
                    "type": "refrigerator",
                    "position": [
                        5.0,
                        5.0,
                        1.0
                    ],
                    "size": 1.8,
                    "door_status": "Closed",
                    "content": []
                }
            },
            "relationship": {},
            "environment": {
                "type": "kitchen"
            }
        },
        "state_description": {
            "type": "the type of the robot or object, e.g., robot, cube, table, etc.",
            "position": "the 3d position of the robot or object, e.g., [4.0, 6.0, -2.0]",
            "size": "the size of the robot or object, e.g., size of an apple is 0.1",
            "gripper_content": "the content in the gripper of the robot. It is a nested list that represent the affliation relationship of objects. e.g., [], [['bowl']], [['fruit_tray',['apple']]]",
            "setting": "the role setting of the robot or object, e.g., 'Robot can only touch objects within the range of gripper contact.'",
            "gripper_contact_range": "the range of robot gripper contact, e.g., 0.6",
            "door_status": "the status of the refrigerator, e.g., 'Open' or 'Closed'",
            "content": "the content in the corresponding object. It is a nested list that represent the affliation relationship of objects. e.g., [], [['bowl']], [['fruit_tray',['apple']]]"
        }
    },
    {
        "agent_task": "The task of the robot is to pour water into the bowl. The behavioral logic of robot should be as follows. The bowl is on the countertop in the kitchen. There is a tap in the kitchen. The robot needs to fetch the bowl and turn on the tap to receive water.",
        "action": {
            "action_class": "Get_water_from_tap_to_bowl",
            "precondition": "None",
            "description": "The robot extends the gripper which holds a bowl under the tap, the water flows into the bowl, and finally the robot retract the gripper.",
            "action_instance": "Get_water_from_tap_to_bowl"
        },
        "output": {
            "thought": "The successful execution of this action 'Get_water_from_tap_to_bowl' is only when 'can_robot_touch_tap?=true', 'whether_robot_hold_bowl?=true', 'bowl_is_filled_with_water?=false' and 'tap_status_is_on?=true', which means the robot could hold the empty bowl to get water from the tap in its gripper contact range. The first condition 'can_robot_touch_tap' needs to check whether robot can touch the tap. So, the state 'position' and 'gripper_contact_range' of 'home_robot' in 'agents', the state 'position' of 'tap' in 'objects' should be checked. The second condition 'whether_robot_hold_bowl' needs to check whether robot hold a bowl. So, the state 'gripper_content' of 'home_robot' in 'agents' should be checked. The third condition 'bowl_is_filled_with_water' needs to check whether the bowl is filled with water or false. So, the state 'filled_with_water' of 'bowl' in 'objects' should be checked. The fourth condition 'tap_status_is_on' needs to check whether the tap is on or off. So, the state 'on_off_status' of 'tap' in 'objects' should be checked.",
            "corestates": {
                "can_robot_touch_tap?": [
                    "agents-home_robot-gripper_contact_range",
                    "agents-home_robot-position",
                    "objects-tap-position"
                ],
                "whether_robot_hold_bowl?": [
                    "agents-home_robot-gripper_content"
                ],
                "bowl_is_filled_with_water?": [
                    "objects-bowl-filled_with_water"
                ],
                "tap_status_is_on?": [
                    "objects-tap-on_off_status"
                ]
            },
            "corestates_successtag": {
                "can_robot_touch_tap?": true,
                "whether_robot_hold_bowl?": true,
                "bowl_is_filled_with_water?": false,
                "tap_status_is_on?": true
            }            
        },
        "states": {
            "agents": {
                "home_robot": {
                    "type": "home_robot",
                    "position": [
                        1.0,
                        1.0,
                        0.7
                    ],
                    "gripper_content": [
                        [
                            "bowl"
                        ]
                    ],
                    "size": 1.2,
                    "gripper_contact_range": 1.0,
                    "setting": "Robot can only touch objects within the range of gripper contact. The robot has two grippers and thus the robot can hold two objects at most simultaneously."
                }
            },
            "objects": {
                "tap": {
                    "type": "tap",
                    "position": [
                        1.0,
                        1.0,
                        0.8
                    ],
                    "size": 0.05,
                    "on_off_status": "on"
                },
                "bowl": {
                    "type": "bowl",
                    "position": [
                        1.1,
                        1.1,
                        1.8
                    ],
                    "size": 0.1,
                    "filled_with_water": false
                }
            },
            "relationship": {},
            "environment": {
                "type": "kitchen"
            }
        },
        "state_description": {
            "type": "the type of the robot or object, e.g., robot, cube, table, etc.",
            "position": "the 3d position of the robot or object, e.g., [4.0, 6.0, -2.0]",
            "gripper_content": "the content in the gripper of the robot. It is a nested list that represent the affliation relationship of objects. e.g., [], [['bowl']], [['fruit_tray',['apple']]]",
            "size": "the size of the robot or object, e.g., size of an apple is 0.1",
            "gripper_contact_range": "the range of robot gripper contact, e.g., 0.6",
            "setting": "the role setting of the robot or object, e.g., 'Robot can only touch objects within the range of gripper contact.'",
            "open_close_state": "the status of the tap, e.g., 'open' or 'closed'",
            "filled_with_water": "whether the bowl is filled with water. e.g., false or true"
        }
    }
]